import moment from 'moment-timezone';
import { xpRange } from '../lib/levelling.js';

const tags = {
    main: '`üíé FUNCIONES PRINCIPALES`',
    group: '`üë• CONFIGURACI√ìN DE GRUPOS`',
    search: '`üîç B√öSQUEDA`',
    downloader: '`‚¨áÔ∏è DESCARGAS`',
    nsfw: '`üîû CONTENIDO ADULTO`',
    internet: '`üåê INTERNET Y HERRAMIENTAS`',
    anime: '`üçô ANIME`',
    anonymous: '`üé≠ CHAT AN√ìNIMO`',
    ai: '`ü§ñ INTELIGENCIA ARTIFICIAL`',
    confesar: '`üíå CONFESIONES`',
    rpg: '`üéÆ AVENTURAS Y JUEGOS`',
    fun: '`üéâ DIVERSI√ìN`',
    sticker: '`‚ú® CREACI√ìN DE STICKERS`',
    tools: '`üîß HERRAMIENTAS`',
    owner: '`üëë ADMINISTRACI√ìN`'
};

const defaultMenu = {
    before: `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë     üìú GU√çA DEL MEN√ö TK üìú     
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üëã Hola, %names.  
En este men√∫ encontrar√°s una descripci√≥n detallada de cada comando disponible.  

üóìÔ∏è Fecha: %date  
‚è∞ Hora: %time  
üë• Usuarios registrados: %totalreg  

üõ†Ô∏è ¬øC√≥mo usar este men√∫?
1Ô∏è‚É£ Busca los comandos disponibles en cada secci√≥n.  
2Ô∏è‚É£ Usa el prefijo adecuado antes de cada comando (por ejemplo: \`.comando\`).  

üåü Consulta esta gu√≠a siempre que necesites orientaci√≥n.  
`.trimStart(),
    header: `
‚ï≠‚îÄ‚îÄ‚îÄ‚ú¶ %category ‚ú¶‚îÄ‚îÄ‚îÄ‚ïÆ`,
    body: `‚û§ %cmd`,
    footer: `
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ`,
    after: `
üåê **Comunidad TK: M√°s que un bot, somos un equipo.**  
üëë *Admin-TK est√° siempre contigo.*`,
};

const shortMenu = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë     üìú GU√çA DEL MEN√ö TK üìú     
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üëã Hola, %names.  
En este men√∫ encontrar√°s una descripci√≥n detallada de cada comando disponible.

üóìÔ∏è Fecha: %date  
‚è∞ Hora: %time  
üë• Usuarios registrados: %totalreg  

üõ†Ô∏è ¬øC√≥mo usar este men√∫?
1Ô∏è‚É£ Busca los comandos disponibles en cada secci√≥n.  
2Ô∏è‚É£ Usa el prefijo adecuado antes de cada comando (por ejemplo: \`.comando\`).  

üåü Consulta esta gu√≠a siempre que necesites orientaci√≥n.

> Ver m√°s...
`.trimStart();

const handler = async (m, { conn, usedPrefix: _p }) => {
    try {
        const { exp, limit, level } = global.db.data.users[m.sender];
        const { min, xp, max } = xpRange(level, global.multiplier);
        const names = await conn.getName(m.sender);
        const d = new Date();
        const locale = 'es';
        const time = d.toLocaleTimeString(locale, { hour: 'numeric', minute: 'numeric', second: 'numeric' });
        const date = d.toLocaleDateString(locale, { day: 'numeric', month: 'long', year: 'numeric' });
        const totalreg = Object.keys(global.db.data.users).length;

        if (!m.text.includes('ver m√°s')) {
            // Enviar versi√≥n reducida del men√∫
            await conn.sendMessage(m.chat, {
                text: shortMenu
                    .replace(/%names/g, names)
                    .replace(/%time/g, time)
                    .replace(/%date/g, date)
                    .replace(/%totalreg/g, totalreg),
                quoted: m
            });
        } else {
            // Enviar men√∫ completo
            const help = Object.values(global.plugins).filter(plugins => !plugins.disabled).map(plugins => ({
                help: Array.isArray(plugins.tags) ? plugins.help : [plugins.help],
                tags: Array.isArray(plugins.tags) ? plugins.tags : [plugins.tags],
                description: plugins.description || 'Sin descripci√≥n disponible.',
                limit: plugins.limit,
                premium: plugins.premium,
            }));

            const menuSections = Object.keys(tags).map(tag => {
                const sectionCommands = help
                    .filter(plugin => plugin.tags.includes(tag) && plugin.help)
                    .map(plugin => plugin.help.map(cmd => defaultMenu.body
                        .replace(/%cmd/g, `${_p}${cmd}`)
                        .replace(/%description/g, plugin.description)
                    ).join('\n')).join('\n');
                if (!sectionCommands) return '';
                return defaultMenu.header.replace(/%category/g, tags[tag]) + '\n' + sectionCommands + '\n' + defaultMenu.footer;
            }).filter(v => v).join('\n\n');

            const text = [
                defaultMenu.before,
                menuSections,
                defaultMenu.after
            ].join('\n')
                .replace(/%names/g, names)
                .replace(/%time/g, time)
                .replace(/%date/g, date)
                .replace(/%totalreg/g, totalreg);

            await conn.sendMessage(m.chat, {
                text: text,
                quoted: m
            });
        }
    } catch (error) {
        console.error(error);
        throw 'Hubo un error generando el men√∫. Por favor, intenta nuevamente.';
    }
};

handler.help = ['menu'];
handler.tags = ['main'];
handler.command = ['menu', 'allmenu', 'ver m√°s'];

export default handler;
