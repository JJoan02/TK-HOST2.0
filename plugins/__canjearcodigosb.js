import { openDb } from '../data/codigos.js';
import fs from 'fs';

let handler = async (m, { conn, args }) => {
  try {
    let codigoIngresado = args[0];
    if (!codigoIngresado) throw '‚ùå *Debes ingresar el c√≥digo proporcionado.*\n\nüí° _Ejemplo:_ `.canjearcodigosb xxx-xxx`';

    // Verificar si el usuario ya est√° verificado
    let verificacion = fs.readFileSync('./data/codigos.json');
    if (verificacion) {
      verificacion = JSON.parse(verificacion);
      if (verificacion[m.sender]) {
        throw '‚ùå *Ya est√°s verificado.*';
      }
    } else {
      verificacion = {};
    }

    // Proceder con la verificaci√≥n
    let db = await openDb(); 

    if (!db) {
      throw '‚ùå *Error al abrir la base de datos.*';
    }

    console.log(`C√≥digo ingresado: ${codigoIngresado}`);

    // Crear la tabla `codigos` si no existe
    await db.run(`CREATE TABLE IF NOT EXISTS codigos (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        codigo TEXT NOT NULL,
        usuario TEXT NOT NULL,
        creadoEn TEXT NOT NULL,
        expiraEn TEXT NOT NULL,
        expirado INTEGER DEFAULT 0,
        canjeado INTEGER DEFAULT 0
    )`);

    // Limpiar c√≥digos expirados antes de proceder
    await limpiarCodigosExpirados(db);

    let codigoObj = await db.get(`SELECT * FROM codigos WHERE codigo = '${codigoIngresado}' AND usuario = '${m.sender}' AND expirado = 0`);

    console.log(`Verificaci√≥n: ${!!verificacion[m.sender]}`);
    console.log(`C√≥digo Obj: ${JSON.stringify(codigoObj)}`);

    if (!codigoObj) throw '‚ùå *El c√≥digo ingresado no es v√°lido o no est√° asociado a tu n√∫mero.*';
    if (codigoObj.canjeado) throw '‚ùå *El c√≥digo ya ha sido canjeado.*';
    if (new Date() > new Date(codigoObj.expiraEn)) {
      // Marcar el c√≥digo como expirado
      await db.run('UPDATE codigos SET expirado = 1 WHERE codigo = ?', [codigoIngresado]);
      throw '‚è≥ *El c√≥digo ha expirado.* Por favor, solicita uno nuevo al administrador.';
    }

    // Crear la tabla `vinculaciones` si no existe
    await db.run(`CREATE TABLE IF NOT EXISTS vinculaciones (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        codigoVinculacion TEXT NOT NULL,
        usuario TEXT NOT NULL,
        creadoEn TEXT NOT NULL,
        expiraEn TEXT NOT NULL,
        expirado INTEGER DEFAULT 0
    )`);

    // Generar c√≥digo de vinculaci√≥n
    let codigoVinculacion = generarCodigoUnico();
    let expiracion = new Date(Date.now() + 5 * 60 * 1000); // 5 minutos

    // Verificar si el usuario ya tiene un c√≥digo de vinculaci√≥n activo
    let vinculacionObj = await db.get('SELECT * FROM vinculaciones WHERE usuario = ? AND expirado = 0', [m.sender]);
    if (vinculacionObj) throw '‚ö†Ô∏è *Ya tienes un c√≥digo de vinculaci√≥n activo.*';

    // Insertar el c√≥digo de vinculaci√≥n en la base de datos
    await db.run(
      'INSERT INTO vinculaciones (codigoVinculacion, usuario, creadoEn, expiraEn) VALUES (?, ?, ?, ?)',
      [codigoVinculacion, m.sender, new Date().toISOString(), expiracion.toISOString()]
    );

    // Enviar el c√≥digo de vinculaci√≥n al usuario
    await conn.sendMessage(m.chat, {
      text: `*üîë C√ìDIGO DE VINCULACI√ìN üîë*\n\nüîí *Tu c√≥digo de vinculaci√≥n es:* *${codigoVinculacion}*\n\n*üìã Instrucciones:*\n\n1Ô∏è‚É£ _Abre WhatsApp en tu tel√©fono._\n2Ô∏è‚É£ _Ve a Configuraci√≥n > Dispositivos vinculados._\n3Ô∏è‚É£ _Toca en "Vincular un dispositivo" y selecciona "Vincular con c√≥digo"._\n4Ô∏è‚É£ _Ingresa el c√≥digo proporcionado._\n\n‚è±Ô∏è *Nota:* El c√≥digo expira en 5 minutos.`,
    });

    // Marcar el c√≥digo original como canjeado
    await db.run('UPDATE codigos SET canjeado = 1 WHERE codigo = ?', [codigoIngresado]);

    // Confirmaci√≥n de canje exitoso
    await conn.sendMessage(m.chat, {
      text: `‚úÖ *¬°C√≥digo de SubBot canjeado con √©xito!* üéâ\n\nPuedes continuar usando las funcionalidades del SubBot.`,
    });

    // Grabar la verificaci√≥n en el archivo /data/codigos.json
    verificacion[m.sender] = {
      codigo: codigoIngresado,
      expiracion: expiracion.toISOString(),
    };
    fs.writeFileSync('./data/codigos.json', JSON.stringify(verificacion, null, 2));
  } catch (error) {
    await conn.sendMessage(m.chat, {
      text: `‚ùå *Ha ocurrido un error:* ${error}`,
    });
  }
};

async function limpiarCodigosExpirados(db) {
    await db.run('UPDATE codigos SET expirado = 1 WHERE expiraEn < ?', [new Date().toISOString()]);
}

export default handler;