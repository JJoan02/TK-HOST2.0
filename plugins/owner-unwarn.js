// ===========================================================
// üìå Actualizado por JoanTK
// ‚úß Funci√≥n: Restablecer las advertencias de un usuario a cero.
// ‚úß Caracter√≠sticas principales:
//    - Verifica si se proporciona un usuario v√°lido (mencionado o en chat privado).
//    - Evita errores si el usuario no existe o no tiene advertencias.
//    - Notifica con mensajes personalizados sobre el √©xito o error de la operaci√≥n.
//    - Registra qui√©n realiz√≥ la acci√≥n, a qui√©n afect√≥, y cu√°ndo ocurri√≥.
// ===========================================================

let handler = async (m, { conn, text }) => {
    // Verificar si se proporcion√≥ un usuario
    if (!text) {
        return m.reply('‚úß Por favor menciona al usuario despu√©s del comando para restablecer sus advertencias.');
    }

    // Determinar el usuario en grupos o chats privados
    let who;
    if (m.isGroup) {
        who = m.mentionedJid[0]; // Obtener el usuario mencionado
    } else {
        who = m.chat; // Enviar en chat privado
    }

    // Verificar si hay un usuario v√°lido
    if (!who) {
        return m.reply('‚úß No se pudo identificar al usuario. Aseg√∫rate de mencionarlo correctamente.');
    }

    // Acceder a la base de datos global de usuarios
    let users = global.db.data.users;
    if (!users[who]) {
        return m.reply(`‚úß El usuario mencionado no existe en la base de datos.`);
    }

    // Verificar si el usuario ya tiene advertencias
    if (users[who].warning === 0) {
        return m.reply(`‚úß El usuario @${who.split('@')[0]} no tiene advertencias para restablecer.`, m.chat, { mentions: [who] });
    }

    // Restablecer advertencias
    users[who].warning = 0;

    // Confirmar acci√≥n al ejecutor
    m.reply(`‚úß Las advertencias del usuario @${who.split('@')[0]} han sido restablecidas con √©xito.`, m.chat, { mentions: [who] });

    // Registro de la acci√≥n
    let logEntry = {
        executor: m.sender, // Qui√©n ejecut√≥ el comando
        target: who, // A qui√©n se aplic√≥
        action: 'reset warnings', // Acci√≥n realizada
        date: new Date().toISOString(), // Fecha y hora del evento
    };

    // Registrar la acci√≥n (puedes cambiar esta parte seg√∫n tu sistema de logs)
    if (!global.logs) global.logs = []; // Crear el registro si no existe
    global.logs.push(logEntry);

    // Notificar que el registro fue exitoso (opcional)
    console.log(`Registro guardado:`, logEntry);
};

handler.help = ['unwarn'];
handler.tags = ['owner'];
handler.command = /^unwarn(user)?$/i;
handler.rowner = true; // Solo accesible por el propietario del bot

export default handler;
