import fetch from 'node-fetch';
import { uploadPomf } from '../lib/uploadImage.js';

/* ============================================================
 * ðŸ“Œ Actualizado por JoanTK
 * âœ¦ FunciÃ³n: Mejora de calidad de imÃ¡genes usando Waifu2x API.
 * âœ¦ DescripciÃ³n:
 *   Este cÃ³digo permite mejorar la calidad de imÃ¡genes enviadas en un chat 
 *   de WhatsApp utilizando la API Waifu2x para realizar un upscale.
 * âœ¦ CaracterÃ­sticas:
 *   1. **ValidaciÃ³n avanzada**:
 *      - Asegura que se responde a una imagen vÃ¡lida antes de continuar.
 *   2. **Flujo robusto**:
 *      - Manejo de errores mejorado con mensajes claros al usuario.
 *   3. **Mensajes personalizados**:
 *      - Confirma el estado del procesamiento con mensajes especÃ­ficos.
 *   4. **Optimizaciones de eficiencia**:
 *      - Uso eficiente de funciones asÃ­ncronas para minimizar tiempo de espera.
 * ============================================================ */

let handler = async (m, { conn, usedPrefix, command, text }) => {
    try {
        // Identificar al usuario o responder a una imagen
        let who = m.mentionedJid && m.mentionedJid[0] 
                  ? m.mentionedJid[0] 
                  : m.fromMe 
                    ? conn.user.jid 
                    : m.sender;
                    
        let name = await conn.getName(who);
        let q = m.quoted || m; // Imagen citada o mensaje actual
        let mime = (q.msg || q).mimetype || '';

        // Validar si se responde a una imagen
        if (!mime || !/image\/(jpe?g|png)/.test(mime)) {
            throw new Error('âœ§ Por favor, responde a una *Imagen* vÃ¡lida (JPEG o PNG).');
        }

        m.reply('âœ§ Procesando tu imagen para mejorar calidad... ðŸ”„');

        // Descargar la imagen
        let media = await q.download();
        if (!media) throw new Error('âœ§ Error al descargar la imagen. Intenta de nuevo.');

        // Subir la imagen para obtener una URL
        let url = await uploadPomf(media);
        if (!url) throw new Error('âœ§ Error al subir la imagen. Revisa tu conexiÃ³n.');

        // Solicitar a la API Waifu2x la mejora de calidad
        let response = await fetch(`https://api.ryzendesu.vip/api/ai/waifu2x?url=${url}`);
        if (!response.ok) {
            let errorMessage = `âœ§ Error al procesar la imagen: ${response.statusText}`;
            throw new Error(errorMessage);
        }

        let hasil = await response.buffer(); // Recibir la imagen procesada en formato binario

        // Enviar la imagen mejorada al usuario
        await conn.sendFile(m.chat, hasil, 'imagen_mejorada.jpg', 
            `âœ§ Â¡AquÃ­ tienes tu imagen con calidad mejorada, ${name}! âœ¨`, m);

    } catch (error) {
        console.error('Error procesando la imagen:', error.message);

        // Manejo de errores personalizados
        if (error.message.includes('imagen')) {
            m.reply(error.message);
        } else {
            m.reply('âœ§ Ha ocurrido un error inesperado al procesar tu imagen. Intenta mÃ¡s tarde.');
        }
    }
};

// ConfiguraciÃ³n del comando
handler.help = ['hd2'];
handler.tags = ['ai'];
handler.command = /^(hd2)$/i;
handler.register = true;

export default handler;
